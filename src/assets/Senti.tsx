/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/Senti.glb -t -r public 
*/

import * as THREE from "three";
import { useGLTF, useScroll } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import { Group, Vector3 } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Plane019: THREE.Mesh;
    Plane001: THREE.Mesh;
    Plane002: THREE.Mesh;
    Plane003: THREE.Mesh;
    Plane004: THREE.Mesh;
    Plane005: THREE.Mesh;
    Plane020: THREE.Mesh;
    Plane021: THREE.Mesh;
    Plane022: THREE.Mesh;
    Plane024: THREE.Mesh;
    Plane025: THREE.Mesh;
    Plane026: THREE.Mesh;
    Plane027: THREE.Mesh;
    Plane028: THREE.Mesh;
    Plane029: THREE.Mesh;
    Plane030: THREE.Mesh;
    Plane037: THREE.Mesh;
    Plane038: THREE.Mesh;
    Plane039: THREE.Mesh;
    Plane040: THREE.Mesh;
    Plane041: THREE.Mesh;
    Plane042: THREE.Mesh;
    Plane043: THREE.Mesh;
    Plane044: THREE.Mesh;
    Plane047: THREE.Mesh;
    Plane048: THREE.Mesh;
    Plane049: THREE.Mesh;
    Plane050: THREE.Mesh;
    Plane051: THREE.Mesh;
    Plane062: THREE.Mesh;
    Plane063: THREE.Mesh;
    Plane006: THREE.Mesh;
  };
  materials: {};
};

export function Senti() {
  const ref = useRef<Group>(null!)
  const data = useScroll();
  useFrame((state) => {
    const r2 = data.range(0, 1);
    ref.current.position.x = r2

    const multiplier = 0.05
    ref.current.rotation.x = state.pointer.x * multiplier;
    ref.current.rotation.y = state.pointer.y * -multiplier;
  });

  return (
    <group position={[0, 0, -20]} rotation={[-0.7, -0.2, 1.9]} scale={5} dispose={null}>
      <group position={[0, 0, 0]} ref={ref}>
        <Parts />
      </group>
    </group>
  );
}

function Parts() {
  const { nodes } = useGLTF("/Senti.glb") as GLTFResult;
  return (
    <>
      <FloatingPart
        geometry={nodes.Plane020.geometry}
        position={new Vector3(0.136, 0.115, 0.308)}
      />
      <FloatingPart
        geometry={nodes.Plane063.geometry}
        position={new Vector3(0.401, 0.527, 0.308)}
        range={0.05}
        offset={0.1}
      />
      <FloatingPart
        geometry={nodes.Plane021.geometry}
        position={new Vector3(0.255, 0.667, 0.3)}
        range={0.15}
        offset={0.2}
      />
      <FloatingPart
        geometry={nodes.Plane062.geometry}
        position={new Vector3(0.217, -0.048, 0.3)}
        offset={0.1}
        range={0.1}
      />
      <FloatingPart
        geometry={nodes.Plane022.geometry}
        position={new Vector3(0.243, 0.296, 0.294)}
        offset={0.18}
        range={0.15}
      />
      <FloatingPart
        geometry={nodes.Plane028.geometry}
        position={new Vector3(0.388, -0.303, 0.296)}
        offset={0.25}
        range={0.34}
      />
      <mesh
        geometry={nodes.Plane019.geometry}
        material={nodes.Plane019.material}
        position={[-1.31, -0.6, 0.491]}
      />
      <mesh
        geometry={nodes.Plane001.geometry}
        material={nodes.Plane001.material}
        position={[-1.707, -0.098, 0.435]}
      />
      <mesh
        geometry={nodes.Plane002.geometry}
        material={nodes.Plane002.material}
        position={[-1.707, -0.098, 0.497]}
      />
      <mesh
        geometry={nodes.Plane003.geometry}
        material={nodes.Plane003.material}
        position={[-1.707, -0.098, 0.422]}
      />
      <mesh
        geometry={nodes.Plane004.geometry}
        material={nodes.Plane004.material}
        position={[-1.91, 0.152, 0.428]}
      />
      <mesh
        geometry={nodes.Plane005.geometry}
        material={nodes.Plane005.material}
        position={[-1.321, -0.28, 0.389]}
      />

      <mesh
        geometry={nodes.Plane024.geometry}
        material={nodes.Plane024.material}
        position={[-0.13, 1.467, 0.256]}
      />
      <mesh
        geometry={nodes.Plane025.geometry}
        material={nodes.Plane025.material}
        position={[0.905, 1.247, 0.256]}
      />
      <mesh
        geometry={nodes.Plane026.geometry}
        material={nodes.Plane026.material}
        position={[0.696, 1.307, 0.256]}
      />
      <mesh
        geometry={nodes.Plane027.geometry}
        material={nodes.Plane027.material}
        position={[-0.798, 0.669, 0]}
      />

      <mesh
        geometry={nodes.Plane029.geometry}
        material={nodes.Plane029.material}
        position={[-0.287, -0.768, 0.327]}
      />
      <mesh geometry={nodes.Plane030.geometry} position={[4.089, -0.266, 0.222]}>
        <meshPhysicalMaterial />
      </mesh>
      <mesh
        geometry={nodes.Plane037.geometry}
        material={nodes.Plane037.material}
        position={[-2.409, -0.443, 0.492]}
      />
      <mesh
        geometry={nodes.Plane038.geometry}
        material={nodes.Plane038.material}
        position={[-1.371, -1.234, 0.439]}
      />
      <mesh
        geometry={nodes.Plane039.geometry}
        material={nodes.Plane039.material}
        position={[-1.502, 1.313, 0]}
      />
      <mesh
        geometry={nodes.Plane040.geometry}
        material={nodes.Plane040.material}
        position={[-1.965, 0.463, 0]}
      />
      <mesh
        geometry={nodes.Plane041.geometry}
        material={nodes.Plane041.material}
        position={[-0.95, 0.404, 0]}
      />
      <mesh
        geometry={nodes.Plane042.geometry}
        material={nodes.Plane042.material}
        position={[-2.032, -1.346, 0.619]}
      />
      <mesh
        geometry={nodes.Plane043.geometry}
        material={nodes.Plane043.material}
        position={[-1.736, -1.364, 0.606]}
      />
      <mesh
        geometry={nodes.Plane044.geometry}
        material={nodes.Plane044.material}
        position={[-1.541, -1.301, 0.605]}
      />
      <mesh
        geometry={nodes.Plane047.geometry}
        material={nodes.Plane047.material}
        position={[-2.592, 0.301, 0]}
      />
      <mesh
        geometry={nodes.Plane048.geometry}
        material={nodes.Plane048.material}
        position={[-2.644, 1.052, 0]}
      />
      <mesh
        geometry={nodes.Plane049.geometry}
        material={nodes.Plane049.material}
        position={[-2.478, 0.816, 0]}
      />
      <mesh
        geometry={nodes.Plane050.geometry}
        material={nodes.Plane050.material}
        position={[-1.731, 0.85, 0]}
      />
      <mesh
        geometry={nodes.Plane051.geometry}
        material={nodes.Plane051.material}
        position={[-3.755, 0, 0]}
      />
      <mesh
        geometry={nodes.Plane006.geometry}
        material={nodes.Plane006.material}
        position={[-1.965, 0.463, 0]}
      />
    </>
  );
}

interface FloatingPart {
  geometry: THREE.BufferGeometry<THREE.NormalBufferAttributes>;
  position: Vector3;
  start?: number;
  range?: number;
  offset?: number;
}

function FloatingPart({
  geometry,
  position,
  start = 0,
  range = 0,
  offset = 0,
}: FloatingPart) {
  const ref = useRef<Group>(null!);
  const data = useScroll();
  useFrame(() => {
    const r2 = data.range(start, 0.5 + range);
    ref.current.position.z = (1 - r2) * (0.3 + offset);
  });
  return (
    <group ref={ref}>
      <mesh geometry={geometry} position={position}>
        <meshPhysicalMaterial />
      </mesh>
    </group>
  );
}

useGLTF.preload("/Senti.glb");
